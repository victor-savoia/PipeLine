package testJUnit.DB;

import static org.junit.Assert.*;

import java.io.File;

import org.junit.Test;

import entityRepository.DatabaseRepositorio;
import exception.DatabaseDaoException;

public class UC01REQNF01ObterSeparador{

	DatabaseRepositorio dbRepositorio = new DatabaseRepositorio();
	private static File arquivoSeparadorTeste = new File ("./tests/testJUnit/DB/repository/TestJUnitPed.ped");
	
	/**
	 * ID-CT01A1ObterSeparadorEspaco <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar sequencia que utilize um dos separadores: " ",",",";","	"
	 * @throws DatabaseDaoException
	 */
	@Test
	public void CT01A1ObterSeparadorEspaco() throws DatabaseDaoException {
		assertEquals("Resultado esperado"," ", dbRepositorio.obterSeparador("FID IID PAT MAT"));
	}
	
	/**
	 * ID-CT02A2ObterSeparadorEspaco1 <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar sequencia que utilize um dos separadores: " ",",",";","	"
	 * @throws DatabaseDaoException
	 */
	@Test
	public void CT01A2ObterSeparadorEspaco1() throws DatabaseDaoException {
		assertEquals("Resultado esperado",",", dbRepositorio.obterSeparador("FID,IID,PAT,MAT"));
	}
	
	/**
	 * ID-CT03A3ObterSeparadorEspaco1 <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar sequencia que utilize um dos separadores: " ",",",";","	"
	 * @throws DatabaseDaoException
	 */
	@Test
	public void CT01A3ObterSeparadorEspaco1() throws DatabaseDaoException {
		assertEquals("Resultado esperado",";", dbRepositorio.obterSeparador("FID;IID;PAT;MAT"));
	}
	
	/**
	 * ID-CT04A4ObterSeparadorEspaco <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar sequencia que utilize um dos separadores: " ",",",";","	"
	 * @throws DatabaseDaoException
	 */
	@Test
	public void CT01A4ObterSeparadorEspaco() throws DatabaseDaoException {
		assertEquals("Resultado esperado","	", dbRepositorio.obterSeparador("FID	IID	PAT	MAT"));
	}
	
	/**
	 * ID-CT05A5ObterSeparadorEspaco <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar sequencia que utilize um dos separadores: " ",",",";","	"
	 * @throws DatabaseDaoException
	 */
	@Test(expected=DatabaseDaoException.class)
	public void CT01A5ObterSeparadorEspaco() throws DatabaseDaoException {
		dbRepositorio.obterSeparador("FID/IID/PAT/MAT");
	}
	
	/**
	 * ID-CT02FB01OBterSeparadorPorArquivo <p>
	 * Objetivo - Obter separador utilizado no arquivo. <p>
	 * Pre-condicao - Informar o caminho do arquivo <p>;
	 * @throws DatabaseDaoException
	 */
	@Test
	public void CT02FB01OBterSeparadorPorArquivo() throws Exception{
		dbRepositorio.obterSeparador(arquivoSeparadorTeste);
	}
	
	/**
	 * ID-CT02FA01OBterSeparadorPorArquivo <p>
	 * Objetivo - Testar o lançamneto de uma exceção de arquivo não encontrado. <p>
	 * Pre-condicao - Informar o caminho do arquivo inexistente <p>;
	 * @throws DatabaseDaoException
	 */
	@Test(expected = DatabaseDaoException.class)
	public void CT02FA01OBterSeparadorPorArquivo() throws Exception{
		dbRepositorio.obterSeparador(new File("./teste"));
	}
	
	
}
