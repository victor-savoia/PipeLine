package dao;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;

import exception.DatabaseDaoException;

public interface DatabaseDao {
	
	/**
	 * Quando há um arquivo Database.txt, abre arquivo envia
	 * em forma de vetor cada um dos caminhos de:
	 * vetDatabase[0] = MAP
	 * vetDatabase[1] = PED
	 * vetDatabase[2] = PHENO
	 * vetDatabase[3] = PVALUE
	 * vetDatabase[4] = CUTOFF
	 * vetDatabase[5] = PCA
	 * vetDatabase[6] -> PHENO produzido pelo sistema (./system_Files/Pheno.csv)
	 * vetDatabase[7] -> IDENTIFICADOR
	 * vetDatabase[8] -> SEPARADOR
	 * Caso contrario, solicita criacao de um arquivo
	 * @return 
	 * Vetor com enderecos de arquivos obtidos no banco
	 * @throws DatabaseDaoException
	 */
	public String[] lerArquivoDatabase() throws DatabaseDaoException;
	
	/**
	 * Recebe um vetor com os caminhos de arquivos que serão 
	 * utilizados pelo sistema e os persiste.
	 * 
	 * @param vetDatabase
	 * @return String com mensagem de sucesso
	 * @throws DatabaseDaoException
	 */
	public String salvar(String[] vetorCaminhoArquivo)
			throws DatabaseDaoException;
	
	/**
	 * Recebe um endereco do arquivo e realiza a leitura do arquivo,
	 * retorna somente o cabecalho.
	 * 
	 * @param enderecoArquivo
	 * @return String contendo o cabecalho do arquivo
	 * @throws DatabaseDaoException
	 */
	public String lerCabecalho(String enderecoPheno)
			throws DatabaseDaoException;

	/**
	 * Recebe endereco do arquivo. Faz leitura e inclui em uma 
	 * lista cada linha desse arquivo.
	 * @param enderecoArquivo
	 * @return 
	 * Lista com cada linha do arquivo contida em cada elemento
	 * @throws DatabaseDaoException
	 */
	public ArrayList<String> lerArquivo(String endereco)
			throws DatabaseDaoException;

	/**
	 * Cria (ou sobrescreve) o arquivo Pheno.csv com a juncao do 
	 * Pheno e Pca
	 * @param listaPheno
	 * @param separador
	 * @return String com mensagem de sucesso
	 * @throws DatabaseDaoException
	 */
	public String salvarPhenoPca(ArrayList<ArrayList<String>> listaPheno,
			String separador) throws DatabaseDaoException;
	
	/**
	 * Le a primeira linha do arquivo e, 
	 * separa pelo separador recebido para ver 
	 * quantas separacoes foram feitas.
	 * 
	 * @param arquivo
	 *            Arquivo analisado.
	 * @param separador
	 *            Separador utilizado.
	 * @return int Quantidade de separações 
	 * obtidas por esse separador.
	 * @throws DatabaseDaoException
	 */
	public int obterNumeroColunas(String arquivo, String separador)
			throws DatabaseDaoException;
	
	/**
	 * Conta a quantidade de linhas que o arquivo possui.
	 * 
	 * @param arquivo
	 *            Arquivo que sera analisado.
	 * @return int Retorna a quantidade de linhas
	 * encotradas no arquivo.
	 * @throws DatabaseDaoException
	 */
	public int obterNumeroLinhas(String arquivo) throws DatabaseDaoException;
	
	/**
	 * Adquire endereco Pheno gerado pelo sistema
	 * @return Endereco onde se localiza o Pheno gerado pelo sistema
	 */
	public String getEnderecoPhenoSistema();

	/**
	 * Realiza leitura do cabecalgo,
	 * solicita posicao no arquivo e 
	 * adquire vetor com todos os elementos da variavel escolhida
	 * @param varDep
	 * @param enderecoPheno
	 * @param separador
	 * @return
	 * @throws DatabaseDaoException
	 */
	public ArrayList<String> obterCategoria(String varDep, File enderecoPheno, String separador) throws DatabaseDaoException;
	
	/**
	 * Busca a primeira linha de um arquivo
	 * @param arquivo Arquivo que será aberto
	 * @return Primeira linha do arquivo
	 * @throws FileNotFoundException
	 */
	public String getPrimeiraLinha(File arquivo) throws FileNotFoundException;
}
